{"id":"node_modules/w3c-xmlserializer/lib/attributes.js","dependencies":[{"name":"/Users/mingdao/mdAppLibrary/package.json","includedInParent":true,"mtime":1608194424594},{"name":"/Users/mingdao/mdAppLibrary/.babelrc","includedInParent":true,"mtime":1607862745676},{"name":"/Users/mingdao/mdAppLibrary/node_modules/w3c-xmlserializer/package.json","includedInParent":true,"mtime":1561010473265},{"name":"xml-name-validator","loc":{"line":3,"column":20},"parent":"/Users/mingdao/mdAppLibrary/node_modules/w3c-xmlserializer/lib/attributes.js","resolved":"/Users/mingdao/mdAppLibrary/node_modules/xml-name-validator/lib/xml-name-validator.js"},{"name":"./constants","loc":{"line":5,"column":31},"parent":"/Users/mingdao/mdAppLibrary/node_modules/w3c-xmlserializer/lib/attributes.js","resolved":"/Users/mingdao/mdAppLibrary/node_modules/w3c-xmlserializer/lib/constants.js"}],"generated":{"js":"\"use strict\";\n\nconst xnv = require(\"xml-name-validator\");\n\nconst { NAMESPACES } = require(\"./constants\");\n\nfunction generatePrefix(map, newNamespace, prefixIndex) {\n  const generatedPrefix = \"ns\" + prefixIndex;\n  map[newNamespace] = [generatedPrefix];\n  return generatedPrefix;\n}\n\nfunction preferredPrefixString(map, ns, preferredPrefix) {\n  const candidateList = map[ns];\n  if (!candidateList) {\n    return null;\n  }\n  if (candidateList.includes(preferredPrefix)) {\n    return preferredPrefix;\n  }\n  return candidateList[candidateList.length - 1];\n}\n\nfunction serializeAttributeValue(value/* , requireWellFormed*/) {\n  if (value === null) {\n    return \"\";\n  }\n  // TODO: Check well-formedness\n  return value\n    .replace(/&/g, \"&amp;\")\n    .replace(/\"/g, \"&quot;\")\n    .replace(/</g, \"&lt;\")\n    .replace(/>/g, \"&gt;\")\n    .replace(/\\t/g, \"&#x9;\")\n    .replace(/\\n/g, \"&#xA;\")\n    .replace(/\\r/g, \"&#xD;\");\n}\n\nfunction serializeAttributes(\n  element,\n  map,\n  localPrefixes,\n  ignoreNamespaceDefAttr,\n  requireWellFormed,\n  refs\n) {\n  let result = \"\";\n  const namespaceLocalnames = Object.create(null);\n  for (const attr of element.attributes) {\n    if (\n      requireWellFormed &&\n      namespaceLocalnames[attr.namespaceURI] &&\n      namespaceLocalnames[attr.namespaceURI].has(attr.localName)\n    ) {\n      throw new Error(\"Found duplicated attribute\");\n    }\n    if (!namespaceLocalnames[attr.namespaceURI]) {\n      namespaceLocalnames[attr.namespaceURI] = new Set();\n    }\n    namespaceLocalnames[attr.namespaceURI].add(attr.localName);\n    const attributeNamespace = attr.namespaceURI;\n    let candidatePrefix = null;\n    if (attributeNamespace !== null) {\n      candidatePrefix = preferredPrefixString(\n        map,\n        attributeNamespace,\n        attr.prefix\n      );\n      if (attributeNamespace === NAMESPACES.XMLNS) {\n        if (\n          attr.value === NAMESPACES.XML ||\n          (attr.prefix === null && ignoreNamespaceDefAttr) ||\n          (attr.prefix !== null &&\n            localPrefixes[attr.localName] !== attr.value &&\n            map[attr.value].includes(attr.localName))\n        ) {\n          continue;\n        }\n        if (requireWellFormed && attr.value === NAMESPACES.XMLNS) {\n          throw new Error(\n            \"The XMLNS namespace is reserved and cannot be applied as an element's namespace via XML parsing\"\n          );\n        }\n        if (requireWellFormed && attr.value === \"\") {\n          throw new Error(\n            \"Namespace prefix declarations cannot be used to undeclare a namespace\"\n          );\n        }\n        if (attr.prefix === \"xmlns\") {\n          candidatePrefix = \"xmlns\";\n        }\n      } else if (candidatePrefix === null) {\n        candidatePrefix = generatePrefix(\n          map,\n          attributeNamespace,\n          refs.prefixIndex++\n        );\n        result += ` xmlns:${candidatePrefix}=\"${serializeAttributeValue(\n          attributeNamespace,\n          requireWellFormed\n        )}\"`;\n      }\n    }\n\n    result += \" \";\n    if (candidatePrefix !== null) {\n      result += candidatePrefix + \":\";\n    }\n    if (\n      requireWellFormed &&\n      (attr.localName.includes(\":\") ||\n        !xnv.name(attr.localName) ||\n        (attr.localName === \"xmlns\" && attributeNamespace === null))\n    ) {\n      throw new Error(\"Invalid attribute localName value\");\n    }\n    result += `${attr.localName}=\"${serializeAttributeValue(\n      attr.value,\n      requireWellFormed\n    )}\"`;\n  }\n  return result;\n}\n\nmodule.exports.preferredPrefixString = preferredPrefixString;\nmodule.exports.generatePrefix = generatePrefix;\nmodule.exports.serializeAttributeValue = serializeAttributeValue;\nmodule.exports.serializeAttributes = serializeAttributes;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/w3c-xmlserializer/lib/attributes.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}}],"sources":{"node_modules/w3c-xmlserializer/lib/attributes.js":"\"use strict\";\n\nconst xnv = require(\"xml-name-validator\");\n\nconst { NAMESPACES } = require(\"./constants\");\n\nfunction generatePrefix(map, newNamespace, prefixIndex) {\n  const generatedPrefix = \"ns\" + prefixIndex;\n  map[newNamespace] = [generatedPrefix];\n  return generatedPrefix;\n}\n\nfunction preferredPrefixString(map, ns, preferredPrefix) {\n  const candidateList = map[ns];\n  if (!candidateList) {\n    return null;\n  }\n  if (candidateList.includes(preferredPrefix)) {\n    return preferredPrefix;\n  }\n  return candidateList[candidateList.length - 1];\n}\n\nfunction serializeAttributeValue(value/* , requireWellFormed*/) {\n  if (value === null) {\n    return \"\";\n  }\n  // TODO: Check well-formedness\n  return value\n    .replace(/&/g, \"&amp;\")\n    .replace(/\"/g, \"&quot;\")\n    .replace(/</g, \"&lt;\")\n    .replace(/>/g, \"&gt;\")\n    .replace(/\\t/g, \"&#x9;\")\n    .replace(/\\n/g, \"&#xA;\")\n    .replace(/\\r/g, \"&#xD;\");\n}\n\nfunction serializeAttributes(\n  element,\n  map,\n  localPrefixes,\n  ignoreNamespaceDefAttr,\n  requireWellFormed,\n  refs\n) {\n  let result = \"\";\n  const namespaceLocalnames = Object.create(null);\n  for (const attr of element.attributes) {\n    if (\n      requireWellFormed &&\n      namespaceLocalnames[attr.namespaceURI] &&\n      namespaceLocalnames[attr.namespaceURI].has(attr.localName)\n    ) {\n      throw new Error(\"Found duplicated attribute\");\n    }\n    if (!namespaceLocalnames[attr.namespaceURI]) {\n      namespaceLocalnames[attr.namespaceURI] = new Set();\n    }\n    namespaceLocalnames[attr.namespaceURI].add(attr.localName);\n    const attributeNamespace = attr.namespaceURI;\n    let candidatePrefix = null;\n    if (attributeNamespace !== null) {\n      candidatePrefix = preferredPrefixString(\n        map,\n        attributeNamespace,\n        attr.prefix\n      );\n      if (attributeNamespace === NAMESPACES.XMLNS) {\n        if (\n          attr.value === NAMESPACES.XML ||\n          (attr.prefix === null && ignoreNamespaceDefAttr) ||\n          (attr.prefix !== null &&\n            localPrefixes[attr.localName] !== attr.value &&\n            map[attr.value].includes(attr.localName))\n        ) {\n          continue;\n        }\n        if (requireWellFormed && attr.value === NAMESPACES.XMLNS) {\n          throw new Error(\n            \"The XMLNS namespace is reserved and cannot be applied as an element's namespace via XML parsing\"\n          );\n        }\n        if (requireWellFormed && attr.value === \"\") {\n          throw new Error(\n            \"Namespace prefix declarations cannot be used to undeclare a namespace\"\n          );\n        }\n        if (attr.prefix === \"xmlns\") {\n          candidatePrefix = \"xmlns\";\n        }\n      } else if (candidatePrefix === null) {\n        candidatePrefix = generatePrefix(\n          map,\n          attributeNamespace,\n          refs.prefixIndex++\n        );\n        result += ` xmlns:${candidatePrefix}=\"${serializeAttributeValue(\n          attributeNamespace,\n          requireWellFormed\n        )}\"`;\n      }\n    }\n\n    result += \" \";\n    if (candidatePrefix !== null) {\n      result += candidatePrefix + \":\";\n    }\n    if (\n      requireWellFormed &&\n      (attr.localName.includes(\":\") ||\n        !xnv.name(attr.localName) ||\n        (attr.localName === \"xmlns\" && attributeNamespace === null))\n    ) {\n      throw new Error(\"Invalid attribute localName value\");\n    }\n    result += `${attr.localName}=\"${serializeAttributeValue(\n      attr.value,\n      requireWellFormed\n    )}\"`;\n  }\n  return result;\n}\n\nmodule.exports.preferredPrefixString = preferredPrefixString;\nmodule.exports.generatePrefix = generatePrefix;\nmodule.exports.serializeAttributeValue = serializeAttributeValue;\nmodule.exports.serializeAttributes = serializeAttributes;\n"},"lineCount":129}},"error":null,"hash":"1b3f4ac66852d6c3ed4614565aeb1d8e","cacheData":{"env":{}}}